'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var LRU = require('lru-cache');
var path = require('path');
var deepmerge = require('deepmerge');
var Layout = require('./layout');
var options = {
    max: 500,
    maxAge: 1000 * 60 * 60
};
var lruCache = LRU(options);

var Defaults = function () {
    function Defaults() {
        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        _classCallCheck(this, Defaults);

        this.cache = lruCache;
        this.options = options;
        this.layout = new Layout.Layout(options.layout);

        if (options.rootPath) {
            this.rootPath = path.resolve(options.rootPath);
        }
        if (options.component) {
            this.component = options.component;
        }

        if (options.vue) {
            this.vue = options.vue;
        } else {
            this.vue = {};
        }
        if (options.data) {
            this.data = options.data;
        } else {
            this.data = {};
        }
    }

    _createClass(Defaults, [{
        key: 'mergeVueObject',
        value: function mergeVueObject(newVueObject) {
            this.vue = deepmerge(this.vue, newVueObject);
        }
    }, {
        key: 'mergeDataObject',
        value: function mergeDataObject(newDataObject) {
            this.data = deepmerge(this.data, newDataObject);
        }
    }]);

    return Defaults;
}();

module.exports = Defaults;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tb2RlbHMvZGVmYXVsdHMuanMiXSwibmFtZXMiOlsiTFJVIiwicmVxdWlyZSIsInBhdGgiLCJkZWVwbWVyZ2UiLCJMYXlvdXQiLCJvcHRpb25zIiwibWF4IiwibWF4QWdlIiwibHJ1Q2FjaGUiLCJEZWZhdWx0cyIsImNhY2hlIiwibGF5b3V0Iiwicm9vdFBhdGgiLCJyZXNvbHZlIiwiY29tcG9uZW50IiwidnVlIiwiZGF0YSIsIm5ld1Z1ZU9iamVjdCIsIm5ld0RhdGFPYmplY3QiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFDQSxJQUFNQSxNQUFNQyxRQUFRLFdBQVIsQ0FBWjtBQUNBLElBQU1DLE9BQU9ELFFBQVEsTUFBUixDQUFiO0FBQ0EsSUFBTUUsWUFBWUYsUUFBUSxXQUFSLENBQWxCO0FBQ0EsSUFBTUcsU0FBU0gsUUFBUSxVQUFSLENBQWY7QUFDQSxJQUFNSSxVQUFVO0FBQ1pDLFNBQUssR0FETztBQUVaQyxZQUFRLE9BQU8sRUFBUCxHQUFZO0FBRlIsQ0FBaEI7QUFJQSxJQUFNQyxXQUFXUixJQUFJSyxPQUFKLENBQWpCOztJQUVNSSxRO0FBUUYsd0JBQWtDO0FBQUEsWUFBdEJKLE9BQXNCLHVFQUFKLEVBQUk7O0FBQUE7O0FBQzlCLGFBQUtLLEtBQUwsR0FBYUYsUUFBYjtBQUNBLGFBQUtILE9BQUwsR0FBZUEsT0FBZjtBQUNBLGFBQUtNLE1BQUwsR0FBYyxJQUFJUCxPQUFPQSxNQUFYLENBQWtCQyxRQUFRTSxNQUExQixDQUFkOztBQUVBLFlBQUlOLFFBQVFPLFFBQVosRUFBc0I7QUFDbEIsaUJBQUtBLFFBQUwsR0FBZ0JWLEtBQUtXLE9BQUwsQ0FBYVIsUUFBUU8sUUFBckIsQ0FBaEI7QUFDSDtBQUNELFlBQUlQLFFBQVFTLFNBQVosRUFBdUI7QUFDbkIsaUJBQUtBLFNBQUwsR0FBaUJULFFBQVFTLFNBQXpCO0FBQ0g7O0FBRUQsWUFBSVQsUUFBUVUsR0FBWixFQUFpQjtBQUNiLGlCQUFLQSxHQUFMLEdBQVdWLFFBQVFVLEdBQW5CO0FBQ0gsU0FGRCxNQUVPO0FBQ0gsaUJBQUtBLEdBQUwsR0FBVyxFQUFYO0FBQ0g7QUFDRCxZQUFJVixRQUFRVyxJQUFaLEVBQWtCO0FBQ2QsaUJBQUtBLElBQUwsR0FBWVgsUUFBUVcsSUFBcEI7QUFDSCxTQUZELE1BRU87QUFDSCxpQkFBS0EsSUFBTCxHQUFZLEVBQVo7QUFDSDtBQUNKOzs7O3VDQUNjQyxZLEVBQTRCO0FBQ3ZDLGlCQUFLRixHQUFMLEdBQVdaLFVBQVUsS0FBS1ksR0FBZixFQUFvQkUsWUFBcEIsQ0FBWDtBQUNIOzs7d0NBQ2VDLGEsRUFBNkI7QUFDekMsaUJBQUtGLElBQUwsR0FBWWIsVUFBVSxLQUFLYSxJQUFmLEVBQXFCRSxhQUFyQixDQUFaO0FBQ0g7Ozs7OztBQUdMQyxPQUFPQyxPQUFQLEdBQWlCWCxRQUFqQiIsImZpbGUiOiJkZWZhdWx0cy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEBmbG93XG5jb25zdCBMUlUgPSByZXF1aXJlKCdscnUtY2FjaGUnKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBkZWVwbWVyZ2UgPSByZXF1aXJlKCdkZWVwbWVyZ2UnKTtcbmNvbnN0IExheW91dCA9IHJlcXVpcmUoJy4vbGF5b3V0Jyk7XG5jb25zdCBvcHRpb25zID0ge1xuICAgIG1heDogNTAwLFxuICAgIG1heEFnZTogMTAwMCAqIDYwICogNjBcbn07XG5jb25zdCBscnVDYWNoZSA9IExSVShvcHRpb25zKTtcblxuY2xhc3MgRGVmYXVsdHMge1xuICAgIHJvb3RQYXRoOiBzdHJpbmc7XG4gICAgY29tcG9uZW50OiBzdHJpbmc7XG4gICAgbGF5b3V0OiBMYXlvdXQuTGF5b3V0O1xuICAgIG9wdGlvbnM6IE9iamVjdDtcbiAgICBjYWNoZTogTFJVO1xuICAgIHZ1ZTogT2JqZWN0O1xuICAgIGRhdGE6IE9iamVjdDtcbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zOiBPYmplY3QgPSB7fSkge1xuICAgICAgICB0aGlzLmNhY2hlID0gbHJ1Q2FjaGU7XG4gICAgICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgICAgIHRoaXMubGF5b3V0ID0gbmV3IExheW91dC5MYXlvdXQob3B0aW9ucy5sYXlvdXQpO1xuXG4gICAgICAgIGlmIChvcHRpb25zLnJvb3RQYXRoKSB7XG4gICAgICAgICAgICB0aGlzLnJvb3RQYXRoID0gcGF0aC5yZXNvbHZlKG9wdGlvbnMucm9vdFBhdGgpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChvcHRpb25zLmNvbXBvbmVudCkge1xuICAgICAgICAgICAgdGhpcy5jb21wb25lbnQgPSBvcHRpb25zLmNvbXBvbmVudDtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChvcHRpb25zLnZ1ZSkge1xuICAgICAgICAgICAgdGhpcy52dWUgPSBvcHRpb25zLnZ1ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMudnVlID0ge307XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG9wdGlvbnMuZGF0YSkge1xuICAgICAgICAgICAgdGhpcy5kYXRhID0gb3B0aW9ucy5kYXRhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5kYXRhID0ge307XG4gICAgICAgIH1cbiAgICB9XG4gICAgbWVyZ2VWdWVPYmplY3QobmV3VnVlT2JqZWN0OiBPYmplY3QpOiB2b2lkIHtcbiAgICAgICAgdGhpcy52dWUgPSBkZWVwbWVyZ2UodGhpcy52dWUsIG5ld1Z1ZU9iamVjdCk7XG4gICAgfVxuICAgIG1lcmdlRGF0YU9iamVjdChuZXdEYXRhT2JqZWN0OiBPYmplY3QpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5kYXRhID0gZGVlcG1lcmdlKHRoaXMuZGF0YSwgbmV3RGF0YU9iamVjdCk7XG4gICAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IERlZmF1bHRzO1xuIl19