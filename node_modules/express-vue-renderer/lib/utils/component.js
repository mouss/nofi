'use strict';

var Models = require('../models');
var Parser = require('../parser');
var PathUtils = require('./checkPathUtils');

var types = new Models.Types();

function setupComponent(componentPath, defaults) {
    return new Promise(function (resolve, reject) {
        var vueFile = componentPath.includes('.vue') ? componentPath : componentPath + '.vue';
        PathUtils.getCorrectPathForFile(vueFile, 'view', defaults).then(function (path) {
            Parser.componentParser(path.path, defaults, types.COMPONENT).then(function (component) {
                resolve(component);
            }).catch(function (error) {
                reject(error);
            });
        }).catch(function (error) {
            reject(error);
        });
    });
}

module.exports = setupComponent;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9jb21wb25lbnQuanMiXSwibmFtZXMiOlsiTW9kZWxzIiwicmVxdWlyZSIsIlBhcnNlciIsIlBhdGhVdGlscyIsInR5cGVzIiwiVHlwZXMiLCJzZXR1cENvbXBvbmVudCIsImNvbXBvbmVudFBhdGgiLCJkZWZhdWx0cyIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwidnVlRmlsZSIsImluY2x1ZGVzIiwiZ2V0Q29ycmVjdFBhdGhGb3JGaWxlIiwidGhlbiIsImNvbXBvbmVudFBhcnNlciIsInBhdGgiLCJDT01QT05FTlQiLCJjb21wb25lbnQiLCJjYXRjaCIsImVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFDQSxJQUFNQSxTQUFTQyxRQUFRLFdBQVIsQ0FBZjtBQUNBLElBQU1DLFNBQVNELFFBQVEsV0FBUixDQUFmO0FBQ0EsSUFBTUUsWUFBWUYsUUFBUSxrQkFBUixDQUFsQjs7QUFFQSxJQUFJRyxRQUFRLElBQUlKLE9BQU9LLEtBQVgsRUFBWjs7QUFFQSxTQUFTQyxjQUFULENBQXdCQyxhQUF4QixFQUErQ0MsUUFBL0MsRUFBMEU7QUFDdEUsV0FBTyxJQUFJQyxPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFVQyxNQUFWLEVBQXFCO0FBQ3BDLFlBQU1DLFVBQVVMLGNBQWNNLFFBQWQsQ0FBdUIsTUFBdkIsSUFBaUNOLGFBQWpDLEdBQWlEQSxnQkFBZ0IsTUFBakY7QUFDQUosa0JBQVVXLHFCQUFWLENBQWdDRixPQUFoQyxFQUF5QyxNQUF6QyxFQUFpREosUUFBakQsRUFDS08sSUFETCxDQUNVLGdCQUFRO0FBQ1ZiLG1CQUFPYyxlQUFQLENBQXVCQyxLQUFLQSxJQUE1QixFQUFrQ1QsUUFBbEMsRUFBNENKLE1BQU1jLFNBQWxELEVBQ0tILElBREwsQ0FDVSxxQkFBYTtBQUNmTCx3QkFBUVMsU0FBUjtBQUNILGFBSEwsRUFJS0MsS0FKTCxDQUlXLGlCQUFTO0FBQ1pULHVCQUFPVSxLQUFQO0FBQ0gsYUFOTDtBQU9ILFNBVEwsRUFVS0QsS0FWTCxDQVVXLGlCQUFTO0FBQ1pULG1CQUFPVSxLQUFQO0FBQ0gsU0FaTDtBQWFILEtBZk0sQ0FBUDtBQWlCSDs7QUFFREMsT0FBT0MsT0FBUCxHQUFpQmpCLGNBQWpCIiwiZmlsZSI6ImNvbXBvbmVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEBmbG93XG5jb25zdCBNb2RlbHMgPSByZXF1aXJlKCcuLi9tb2RlbHMnKTtcbmNvbnN0IFBhcnNlciA9IHJlcXVpcmUoJy4uL3BhcnNlcicpO1xuY29uc3QgUGF0aFV0aWxzID0gcmVxdWlyZSgnLi9jaGVja1BhdGhVdGlscycpO1xuXG5sZXQgdHlwZXMgPSBuZXcgTW9kZWxzLlR5cGVzKCk7XG5cbmZ1bmN0aW9uIHNldHVwQ29tcG9uZW50KGNvbXBvbmVudFBhdGg6IHN0cmluZywgZGVmYXVsdHM6IE1vZGVscy5EZWZhdWx0cykge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIGNvbnN0IHZ1ZUZpbGUgPSBjb21wb25lbnRQYXRoLmluY2x1ZGVzKCcudnVlJykgPyBjb21wb25lbnRQYXRoIDogY29tcG9uZW50UGF0aCArICcudnVlJztcbiAgICAgICAgUGF0aFV0aWxzLmdldENvcnJlY3RQYXRoRm9yRmlsZSh2dWVGaWxlLCAndmlldycsIGRlZmF1bHRzKVxuICAgICAgICAgICAgLnRoZW4ocGF0aCA9PiB7XG4gICAgICAgICAgICAgICAgUGFyc2VyLmNvbXBvbmVudFBhcnNlcihwYXRoLnBhdGgsIGRlZmF1bHRzLCB0eXBlcy5DT01QT05FTlQpXG4gICAgICAgICAgICAgICAgICAgIC50aGVuKGNvbXBvbmVudCA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKGNvbXBvbmVudCk7XG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIC5jYXRjaChlcnJvciA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAuY2F0Y2goZXJyb3IgPT4ge1xuICAgICAgICAgICAgICAgIHJlamVjdChlcnJvcik7XG4gICAgICAgICAgICB9KTtcbiAgICB9KTtcblxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldHVwQ29tcG9uZW50O1xuIl19